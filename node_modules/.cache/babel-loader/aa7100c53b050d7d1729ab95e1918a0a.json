{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\n\nconst Reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case ActionTypes.DECREASE:\n      let cartArrayDec = [];\n\n      if (action.payload.qty === 1) {\n        cartArrayDec = state.cart.filter(cartItem => cartItem.id !== action.payload.id);\n      } else {\n        cartArrayDec = state.cart.map(cartItem => {\n          if (action.payload.id === cartItem.id) {\n            return { ...cartItem,\n              qty: action.payload.qty - 1\n            };\n          }\n\n          return cartItem;\n        });\n      }\n\n      return { ...state,\n        cart: cartArrayDec\n      };\n\n    case ActionTypes.INCREASE:\n      console.log('in increase reducer state', state);\n      const cartArrayInc = state.cart.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          return { ...cartItem,\n            qty: action.payload.qty + 1\n          };\n        }\n\n        return cartItem;\n      });\n      return { ...state,\n        cart: cartArrayInc\n      };\n\n    case ActionTypes.REMOVE:\n      return { ...state,\n        cart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case ActionTypes.GET_TOTALS:\n      console.log('get total reducers');\n      const {\n        count,\n        amount\n      } = state.cart.reduce((cartCalc, cartItem) => {\n        const {\n          price,\n          qty\n        } = cartItem;\n        cartCalc.amount += price * qty;\n        cartCalc.count += qty;\n        return cartCalc;\n      }, {\n        count: 0,\n        amount: 0\n      });\n      return { ...state,\n        count,\n        amount\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;","map":{"version":3,"sources":["/Users/dinesh/Documents/Website/study/practise/new-2021-react/redux-cart-scratch/cart/src/reducers/index.js"],"names":["ActionTypes","Reducer","state","action","type","CLEAR_CART","cart","DECREASE","cartArrayDec","payload","qty","filter","cartItem","id","map","INCREASE","console","log","cartArrayInc","REMOVE","GET_TOTALS","count","amount","reduce","cartCalc","price"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKJ,WAAW,CAACK,UAAjB;AACC,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AAED,SAAKN,WAAW,CAACO,QAAjB;AACC,UAAIC,YAAY,GAAG,EAAnB;;AAEA,UAAGL,MAAM,CAACM,OAAP,CAAeC,GAAf,KAAuB,CAA1B,EAA6B;AAC5BF,QAAAA,YAAY,GAAGN,KAAK,CAACI,IAAN,CAAWK,MAAX,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBV,MAAM,CAACM,OAAP,CAAeI,EAA7D,CAAf;AACA,OAFD,MAEO;AACNL,QAAAA,YAAY,GAAGN,KAAK,CAACI,IAAN,CAAWQ,GAAX,CAAeF,QAAQ,IAAI;AACzC,cAAGT,MAAM,CAACM,OAAP,CAAeI,EAAf,KAAsBD,QAAQ,CAACC,EAAlC,EAAsC;AACrC,mBAAO,EAAE,GAAGD,QAAL;AAAeF,cAAAA,GAAG,EAAEP,MAAM,CAACM,OAAP,CAAeC,GAAf,GAAqB;AAAzC,aAAP;AACA;;AACD,iBAAOE,QAAP;AACA,SALc,CAAf;AAMA;;AAED,aAAO,EACN,GAAGV,KADG;AAENI,QAAAA,IAAI,EAAEE;AAFA,OAAP;;AAKD,SAAKR,WAAW,CAACe,QAAjB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCf,KAAzC;AACA,YAAMgB,YAAY,GAAGhB,KAAK,CAACI,IAAN,CAAWQ,GAAX,CAAgBF,QAAQ,IAAI;AAChD,YAAGA,QAAQ,CAACC,EAAT,KAAgBV,MAAM,CAACM,OAAP,CAAeI,EAAlC,EAAsC;AACrC,iBAAO,EAAE,GAAGD,QAAL;AAAeF,YAAAA,GAAG,EAAEP,MAAM,CAACM,OAAP,CAAeC,GAAf,GAAqB;AAAzC,WAAP;AACA;;AACD,eAAOE,QAAP;AACA,OALoB,CAArB;AAMA,aAAO,EACN,GAAGV,KADG;AAENI,QAAAA,IAAI,EAAEY;AAFA,OAAP;;AAKD,SAAKlB,WAAW,CAACmB,MAAjB;AACC,aAAO,EACN,GAAGjB,KADG;AAENI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWK,MAAX,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBV,MAAM,CAACM,OAAP,CAAeI,EAA7D;AAFA,OAAP;;AAKD,SAAKb,WAAW,CAACoB,UAAjB;AACCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBpB,KAAK,CAACI,IAAN,CAAWiB,MAAX,CAAkB,CAACC,QAAD,EAAWZ,QAAX,KAAwB;AACnE,cAAM;AAAEa,UAAAA,KAAF;AAASf,UAAAA;AAAT,YAAiBE,QAAvB;AACAY,QAAAA,QAAQ,CAACF,MAAT,IAAmBG,KAAK,GAACf,GAAzB;AACAc,QAAAA,QAAQ,CAACH,KAAT,IAAkBX,GAAlB;AACA,eAAOc,QAAP;AACA,OALyB,EAKxB;AACDH,QAAAA,KAAK,EAAE,CADN;AAEDC,QAAAA,MAAM,EAAE;AAFP,OALwB,CAA1B;AASA,aAAO,EAAE,GAAGpB,KAAL;AAAYmB,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,OAAP;;AACD;AACC,aAAOpB,KAAP;AAvDF;AAyDA,CA1DD;;AA4DA,eAAeD,OAAf","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nconst Reducer = (state, action) => {\n\tswitch(action.type){\n\t\tcase ActionTypes.CLEAR_CART:\n\t\t\treturn { ...state, cart: [] };\n\n\t\tcase ActionTypes.DECREASE:\n\t\t\tlet cartArrayDec = [];\n\n\t\t\tif(action.payload.qty === 1) {\n\t\t\t\tcartArrayDec = state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n\t\t\t} else {\n\t\t\t\tcartArrayDec = state.cart.map(cartItem => {\n\t\t\t\t\tif(action.payload.id === cartItem.id) {\n\t\t\t\t\t\treturn { ...cartItem, qty: action.payload.qty - 1 }\n\t\t\t\t\t}\n\t\t\t\t\treturn cartItem;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: cartArrayDec\n\t\t\t}\n\n\t\tcase ActionTypes.INCREASE:\n\t\t\tconsole.log('in increase reducer state', state);\n\t\t\tconst cartArrayInc = state.cart.map( cartItem => {\n\t\t\t\tif(cartItem.id === action.payload.id) {\n\t\t\t\t\treturn { ...cartItem, qty: action.payload.qty + 1 }\n\t\t\t\t}\n\t\t\t\treturn cartItem;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: cartArrayInc\n\t\t\t\t}\n\n\t\tcase ActionTypes.REMOVE:\n\t\t\treturn {\n\t\t\t\t...state, \n\t\t\t\tcart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n\t\t\t};\n\n\t\tcase ActionTypes.GET_TOTALS:\n\t\t\tconsole.log('get total reducers');\n\t\t\tconst { count, amount } = state.cart.reduce((cartCalc, cartItem) => {\n\t\t\t\tconst { price, qty } = cartItem;\n\t\t\t\tcartCalc.amount += price*qty;\n\t\t\t\tcartCalc.count += qty;\n\t\t\t\treturn cartCalc;\n\t\t\t},{\n\t\t\t\tcount: 0,\n\t\t\t\tamount: 0\n\t\t\t});\n\t\t\treturn { ...state, count, amount }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}