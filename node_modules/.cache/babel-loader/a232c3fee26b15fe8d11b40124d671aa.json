{"ast":null,"code":"var _jsxFileName = \"/Users/dinesh/Documents/Website/study/practise/new-2021-react/redux-cart-scratch/cart/src/components/CartContainer.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport CartItem from './CartItem';\nimport { ActionTypes } from \"../actions/actionTypes\";\n\nconst CartContainer = props => {\n  console.log(props, 'carcontainer inside props');\n  const {\n    cart = [],\n    amount = null,\n    dispatch\n  } = props;\n  React.useEffect(() => {\n    dispatch({\n      type: ActionTypes.GET_TOTALS\n    });\n  });\n  const CartList = cart.map(item => {\n    return React.createElement(CartItem, Object.assign({\n      key: item.id\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  });\n\n  if (cart.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Shopping cart is empty\");\n  }\n\n  return React.createElement(\"section\", {\n    className: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"your bag\")), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, CartList), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cart-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"total \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, amount))), React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: () => dispatch({\n      type: ActionTypes.CLEAR_CART\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"clear cart\")));\n};\n\nconst mapStateToProps = state => {\n  const {\n    cart,\n    amount\n  } = state;\n  return {\n    cart,\n    amount\n  };\n};\n\nexport default connect(mapStateToProps)(CartContainer);","map":{"version":3,"sources":["/Users/dinesh/Documents/Website/study/practise/new-2021-react/redux-cart-scratch/cart/src/components/CartContainer.js"],"names":["React","connect","CartItem","ActionTypes","CartContainer","props","console","log","cart","amount","dispatch","useEffect","type","GET_TOTALS","CartList","map","item","id","length","CLEAR_CART","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,2BAAnB;AACE,QAAM;AAAEG,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,MAAM,GAAG,IAAtB;AAA4BC,IAAAA;AAA5B,MAAyCL,KAA/C;AAEAL,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,WAAW,CAACU;AAApB,KAAD,CAAR;AACD,GAFD;AAIA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAAUC,IAAI,IAAI;AAC/B,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAKA,IAAI,CAACC;AAAvB,OAAgCD,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH,GAJgB,CAAjB;;AAMA,MAAIR,IAAI,CAACU,MAAL,KAAgB,CAApB,EAAuB;AACrB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAGD;;AAED,SACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,QADN,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,MAAP,CADR,CADF,CAFJ,EAOI;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,WAAW,CAACgB;AAApB,KAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CAPJ,CADF;AAwBD,CA5CD;;AA8CA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEb,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBY,KAAzB;AACA,SAAO;AAAEb,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD,CAHD;;AAKA,eAAeR,OAAO,CAACmB,eAAD,CAAP,CAAyBhB,aAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\n\nimport CartItem from './CartItem';\nimport { ActionTypes } from \"../actions/actionTypes\";\n\nconst CartContainer = (props) => {\nconsole.log(props, 'carcontainer inside props');\n  const { cart = [], amount = null, dispatch } = props;\n\n  React.useEffect(() => {\n    dispatch({ type: ActionTypes.GET_TOTALS })\n  });\n\n  const CartList = cart.map( item => {\n      return(\n          <CartItem key = { item.id } {...item} />\n      )\n  });\n\n  if (cart.length === 0) {\n    return (\n        <div>Shopping cart is empty</div>\n    )\n  }\n\n  return(\n    <section className=\"cart\">\n        <header>\n            <h2>your bag</h2>\n        </header>\n        <article>\n            { CartList }\n        </article>\n        <footer>\n            <hr />\n            <div className=\"cart-total\">\n              <h4>\n                total <span>{amount}</span>\n              </h4>\n            </div>\n            <button \n              className=\"btn clear-btn\" \n              onClick={()=> dispatch({ type: ActionTypes.CLEAR_CART })}\n            >\n              clear cart\n            </button>\n        </footer>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cart, amount } = state;\n  return { cart, amount }\n}\n\nexport default connect(mapStateToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}